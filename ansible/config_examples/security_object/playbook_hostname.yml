- hosts: all
  connection: local
  gather_facts: False

  tasks:
    - name: "Create an object in Panorama via API"
      uri:
        url: "https://{{ ansible_host }}/api/"
        method: POST
        body_format: form-urlencoded
        body: >
          type=config&action=set&key={{ lookup('env', 'pan_api_key') }}&
          xpath=/config/devices/entry[@name='localhost.localdomain']/device-group/entry[@name='{{ device_group }}']/address&
          element=<entry name='{{ object_name }}'><fqdn>{{ value }}</fqdn></entry>
        validate_certs: no
      register: response

    - name: "Commit changes on Panorama via API"
      uri:
        url: "https://{{ ansible_host }}/api/"
        method: POST
        body_format: form-urlencoded
        body: "type=commit&cmd=<commit></commit>&key={{ lookup('env', 'pan_api_key') }}"
        validate_certs: no
      register: commit_response

    - name: "Retrieve object details from Panorama"
      uri:
        url: "https://{{ ansible_host }}/api/"
        method: GET
        body_format: form-urlencoded
        body: "type=config&action=get&key={{ lookup('env', 'pan_api_key') }}&xpath=/config/devices/entry[@name='localhost.localdomain']/device-group/entry[@name='{{ device_group }}']/address/entry[@name='{{ object_name }}']"
        validate_certs: no
      register: object_details

    - name: Debug API response
      debug:
        var: response

    - name: "Check if object exists on Panorama"
      debug:
        msg: "Object '{{ object_name }}' exists on Panorama."
      when: object_details.status == 200

    - name: "Check if object does not exist on Panorama"
      debug:
        msg: "Object '{{ object_name }}' does not exist on Panorama."
      when: object_details.status != 200
